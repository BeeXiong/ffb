@model FantasyFootballPlayoffs.ViewModels.AddPlayerViewModel
@{
    ViewBag.Title = "AddPlayer";
}


<div class="card w-100 border-blueSummer roundedCorners px-3" id="addPlayersCard">
    <div class="row">
        <div class="card-header w-100"><h2>Add Players</h2></div>
        <div class="card-body">
            <h3>Create A Player</h3>
            <div class="row">
                <div class="my-4">
                    @using (Html.BeginForm("SubmitPlayer", "Stats", FormMethod.Post, htmlAttributes: new { @class = "w-100" }))
                    {
                        <div class="form-inline my-3">
                            <div class="m-3">
                                @Html.LabelFor(m => m.newPlayer.firstName,"First Name", htmlAttributes: new { @class = "text-blueSummer justify-content-start" })
                                @Html.TextBoxFor(m => m.newPlayer.firstName, "Enter First Name", new { @class = "text-blueSummer form-control", Id = "playerFirstName", style = "width:280px" })                               
                            </div>
                            <div class="m-3">
                                @Html.LabelFor(m => m.newPlayer.lastName, "Last Name", htmlAttributes: new { @class = "text-blueSummer justify-content-start" })
                                @Html.TextBoxFor(m => m.newPlayer.lastName, "Enter Last Name", new { @class = "text-blueSummer form-control", Id = "playerLastName", style = "width:280px" })
                            </div>
                            <div class="m-3">
                                @Html.LabelFor(m => m.newPlayer.playerPositionid, "Position", htmlAttributes: new { @class = "text-blueSummer justify-content-start" })
                                @Html.DropDownListFor(m => m.newPlayer.playerPositionid, new SelectList(Model.playerPositions, "Id", "position"), "Select Player Position", new { @class = "form-control", id = "positionId", style = "width:280px" })
                            </div>
                            <div class="m-3">
                                @Html.LabelFor(m => m.SelectedTeam.homeTeamId, "Playoff Team", htmlAttributes: new { @class = "text-blueSummer justify-content-start" })
                                @Html.HiddenFor(m => m.SelectedTeam.Id)
                                @Html.HiddenFor(m => m.SelectedTeam.homeTeamId)
                                @Html.HiddenFor(m => m.SelectedTeam.calendarYearId)  
                                <p id="playoffTeamName">@Model.SelectedTeam.homeTeam.location.teamLocation @Model.SelectedTeam.homeTeam.homeTeamName</p>   
                            </div>
                        </div>
                        <div class="m-4">
                            <button class="btn-primary btn" type="submit">Submit</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div>
    <table id="playoffTeamPlayersTable" class="table table-responsive-md table-condensed table-hover table-striped">
        <thead>
            <tr>
                <th id="playoffTeamPlayertName">First Name</th>
                <th id="playoffTeamPlayerPosition">Position</th>
                <th id="playoffTeamPlayerYear">Year</th>
                <th>Delete Player</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var player in Model.playoffTeamPlayers)
            {
                <tr>
                    <td>@player.firstName @player.lastName</td>
                    <td>@player.playerPosition.position</td>
                    <td>@player.calendarYear.year</td>
                    <td>@Html.ActionLink("Delete", "deletePlayer", "Stats", new { playerId = player.Id, playoffTeamId = player.playoffteamid}, new { @class = "btn btn-danger" })</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="padding">
    <td>@Html.ActionLink("Select Playoff team", "selectPlayoffTeams", "Stats", new { @class = "btn btn-primary" })</td>
</div>
